interweb.admin.email=
interweb.auto-approve.pattern=.+@example.test$

quarkus.http.port=8080
quarkus.http.cors.enabled=true
quarkus.http.cors.origins=/.*/
quarkus.http.cors.access-control-allow-credentials=true

quarkus.analytics.disabled=true
quarkus.log.level=INFO

quarkus.cache.caffeine.initial-capacity=100
quarkus.cache.caffeine.maximum-size=1000
quarkus.cache.caffeine.expire-after-write=P1D

quarkus.cache.caffeine."models".initial-capacity=1
quarkus.cache.caffeine."models".maximum-size=1
quarkus.cache.caffeine."models".expire-after-write=PT10M

quarkus.native.additional-build-args=-march=x86-64-v2

quarkus.datasource.db-kind=mariadb
quarkus.datasource.jdbc.url=jdbc:${quarkus.datasource.reactive.url}
quarkus.datasource.reactive.max-size=20
%dev.quarkus.hibernate-orm.log.sql=true

quarkus.flyway.active=true
quarkus.flyway.migrate-at-start=true
quarkus.flyway.baseline-on-migrate = true

quarkus.smallrye-health.openapi.included=false
quarkus.smallrye-jwt.enabled=true

jwt.issuer=https://l3s.de/interweb
# Make sure not to use these keys in production
# Use https://jwt.io/ to generate your own keys
%dev,test.jwt.key={"kty":"oct","alg":"HS256","k":"EAOrMjRGCUolnkODMzSWGJxjQFY4GxDW-4xFTBu5N1Y"}

smallrye.jwt.new-token.issuer=${jwt.issuer}
smallrye.jwt.new-token.lifespan=86400
smallrye.jwt.sign.key=${jwt.key}

mp.jwt.verify.issuer=${jwt.issuer}
mp.jwt.verify.publickey=${jwt.key}
mp.jwt.verify.publickey.algorithm=HS256

# Sentry
quarkus.log.sentry.enabled=false
quarkus.log.sentry.dsn=
quarkus.log.sentry.level=ERROR
quarkus.log.sentry.in-app-packages=de.l3s.interweb
quarkus.log.sentry.ignored-exceptions-for-type=jakarta.validation.ValidationException

# OpenAPI, Swagger
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=docs
quarkus.swagger-ui.theme=muted
quarkus.swagger-ui.with-credentials=true
quarkus.swagger-ui.persist-authorization=true
quarkus.swagger-ui.request-interceptor=function(req){var authToken=localStorage.getItem('authorized');if(authToken){var authData=JSON.parse(authToken);if(authData.JWT){req.headers['Authorization']='Bearer '+authData.JWT.value;}if(authData.ApiKey){req.headers['Api-Key']=authData.ApiKey.value;}}return req;}

quarkus.swagger-ui.title=Interweb
quarkus.swagger-ui.footer=Interweb is developed and maintained by the Learnweb Team at L3S Research Center, Leibniz University of Hanover, Germany

quarkus.smallrye-openapi.security-scheme=api-key
quarkus.smallrye-openapi.security-scheme-name=ApiKey
quarkus.smallrye-openapi.security-scheme-description=Simplified client auth by API-Key header. Use /api-keys to obtain.
quarkus.smallrye-openapi.api-key-parameter-in=header
quarkus.smallrye-openapi.api-key-parameter-name=Api-Key
